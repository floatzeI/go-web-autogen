// Package autogen_web
// This file was automatically generated by go-web-autogen
// It should not be edited manually
// Generated At: 2021-09-28T17:00:19-04:00
package autogen_web

import (
	"github.com/gofiber/fiber/v2"
	"project-one/controllers"
)

type AutoGenRegister struct {
}

// @Produce json
// @Router {itemId}/info [get]
// @Success 200 {object} items.ItemEntry
// @Param itemId path int64 false "The itemId"
func get_itemidinfo(app *fiber.App) {
	app.Get("{itemId}/info", func (c *fiber.Ctx) error {
		var result = controllers.NewOtherController().GetItemById(NewArgumentParser(c, "path", "itemId", false).GetInt64())
		return c.JSON(result)
	})
}
// @Produce json
// @Router /api/v1/users/{userId}/info [get]
// @Failure 400 {object} models.ErrorResponse "InvalidUserId: UserId is invalid"
// @Success 200 {object} usersmodels.GetUserById
// @Param userId path int64 true "The userId"
func get_apiv1usersuseridinfo(app *fiber.App) {
	app.Get("/api/v1/users/{userId}/info", func (c *fiber.Ctx) error {
		var result = controllers.GetUserById(NewArgumentParser(c, "path", "userId", true).GetInt64())
		return c.JSON(result)
	})
}
// @Produce json
// @Router /api/v1/users/username [get]
// @Success 200 {object} usersmodels.GetUserById
// @Param username query string false "The username"
func get_apiv1usersusername(app *fiber.App) {
	app.Get("/api/v1/users/username", func (c *fiber.Ctx) error {
		var result = controllers.GetUserByName(NewArgumentParser(c, "query", "username", false).GetString())
		return c.JSON(result)
	})
}


func (a *AutoGenRegister) Run(app *fiber.App) {
get_itemidinfo(app)
get_apiv1usersuseridinfo(app)
get_apiv1usersusername(app)

}
